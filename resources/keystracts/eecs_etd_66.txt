software structural metrics file risk reusability today software is found in almost all systems vehicles communication devices medical equipments and entertainment for example the size and complexity of these systems has grown continuously over the last forty years--- the time span for modern competingthe latest release of the windows operating system called vista is expected to he more than fifty million lines of code about 4 bigger than the previous versionsome of the reasons for this are numerous feature demands and the neck to support multiple platforms and need for compatibility with legacy software and hardware each line of code in these large systems requires perhaps several technical decisions often but not simple the sheer volume of this decision making process is daunting no single human can fully understand a system of high complexity to help ameliorate this problem systems are decomposed into subsystems librariesmodules and classes most of these components have interdependencies in order to provide services one to another however in systems of great size the dependencies often become a dense web of relationshipsit is exactly this problem on which we focus in this researchwe propose that static dependency structure is an important element to understand the state of large software system we conduct various analyses using well-known existing open source commercial and expert developed projects including our own projects to evaluate the overall effectiveness of our approaches we detect structural problems in large software development projects and present a structure metric to rank software tiles according to their risk contribution to the software systemadditionally we present a model that indexes software components according to their potential for reuse we design and conduct experiment to investigate the impact of change in one file on other files furthermore we provide tools needed to support analysis project visualization and monitoring finally the investigate corrective procedures and simulate their application monitoring improvements in observed defects