object-oriented programming software synthesis component-based software this dissertation proposes an automatic software synthesis system--intelligent software synthesis system i3s which helps application developers build component-based systems out of pre-existing components i3s directly maps a design specification to an implementation bs requires design specifications to be presented in unified modeling language uml and conform to a certain style an i3s generated implementation consists of a collection of components and necessary interaction entities this implementation is independent of any specific programming or scripting language in short i3s automates processes of component integration using a standard modeling notation--umli3s is built based on following ideas 1 component-based software architectures are components  interactions 2 component-based applications are collections of components 3 with properly identified extensions an oo modeling notation - uml can be used for describing component-based software architecturestherefore this dissertation builds i3s that automates following processes 1 converts and optimizes desired component interactions in behavior specifications to groups of component instances and interaction entities 2 allocates and parameterizes components and identified interaction entities in structure specifications 3 synthesizes the implementations of given specifications with formats required by the desired operating or development environments 4 generates formal descriptions test cases and fundamental predicates to verify and simulate given models