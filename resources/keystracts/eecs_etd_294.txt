visual programming programming languages software engineering visual programming languages vpls and development environments based on these languages have been around for decades despite the benefits of visualgraphical languages over traditional textual languages claimed by the researchers and the partial success of vpls in some domain-specific applications vpls have failed to gain acceptance from the mainstream programmers as a viable or superior means for general-purpose programming we analyzed the advantages and shortcomings of existing programming languages and environments textual or visual in terms of their adopted paradigms expressive capability notation style and effectiveness editing efficiency scalability completeness consistency targeted problem domains and intended users based on the analysis we identify a set of factors that hinder the visual programming approach from practical success we try to tackle this issue by designing exevision a graphical integrated-development-environment ide exevision uses a graphical language based on the semantics of c and is for real world general-purpose programming in this writing we will detail the design methodologies and implementation techniques of the major parts of this ide most importantly including the object model for representing a program and the graphical editor for each of these parts we analyze the challenges we encounter the design choices available and how we make the decisions to achieve our objectives on one hand this system proves the effectiveness of solutions we conceived to solve the problems of visual programming on the other hand it serves as a general guide for developing a visual programming environment for practical use