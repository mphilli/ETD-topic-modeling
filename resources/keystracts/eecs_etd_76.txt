transforms java optimization net the java programming environment uses a highly-developed virtual machine vm to execute its programs the idea of a vm environment isn't new but was popularized greater than ever before with the advent of java java gains flexibility in this environment but pays for that flexibility in terms of performance exacerbating the problem java is a dynamically linked language which often defied traditional static analysis techniques this constraint eliminates many opportunities for compiler optimization certainly the established science of compiler optimization would have had much to contribute to java's performance woes if such analysis were possible this dissertation examines the composition of java applications and presents a framework to identify portions of java applications that are statically analyzable in essence few java applications are fully statically analyzable however the techniques presented herein strive to identify program subsets which we shall call \em closed-systems that are safely statically analyzable in isolation once such subsets are identified and statically analyzed classic optimization transforms may be applied the net framework was released by microsoft several years after java and after the core framework of this dissertation was developed however because of the net environment's runtime similarity with java's the techniques presented here also apply to net with minimal modification specific modifications are noted where applicable the end result of this work is a framework which presents the ability to optimize parts of java applications in ways not previously possible in addition new optimizations specific to the java and net execution environment were discovered for performance improvement application size reduction and reverse engineering impedance