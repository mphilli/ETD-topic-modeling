adaptive communication message passing scheduling distributed computing with recent advances in computer network technologies we have seen a rapid development of high-performance distributed systems that utilize heterogeneous resources which are geographically dispersed across a wide-area network eg grid-computing meta-computing environments the resources of grid-computing include a wide-range of computing systems that vary from high-performance computers eg supercomputers special-purpose parallel machines to desktop computersworkstations and networks that are wired or wireless and that have a wide range of transmission speeds eg from a few kbps to gbps grid-computing when compared to centralized computing systems offers to a network-centric application many benefits including increased performance reliability extensibility cost-effectiveness and scalability however network-centric applications have not fully exploited the potential of high-performance distributed systems because of excessive copying operating system overhead and inflexible communication systems just to name a few furthermore network-centric applications have different quality of service qos requirements and even one single application has multiple qos requirements during the course of its execution in order to support network-centric applications efficiently message-passing tools should provide high performance and dynamic communication services to meet the requirements of a wide range of network-centric applications we believe that these requirements cannot be efficiently achieved by using merely one approach we need to develop adaptable and efficient message-passing tools using multithreading middle-ware  and agent techniquesin this dissertation we have designed developed and evaluated the multithread agent-based message-passing system adaptive communication system  acs  for network-centric computing environments acs supports programmable communication control and management services that can be optimized to meet the quality of service requirements of network-centric applications for a given class of applications acs selects the appropriate multicastbroadcast algorithms using an acs application-aware scheduling algorithm that can meet the application quality of service requirements in addition the implementation of an acs resource-aware scheduling algorithm takes into consideration the types of machines and current system and network loads the performance of acs has been analyzed and compared with other message-passing tools such as p4 pvm and mpi in terms of point-to-point multicasting and application performance benchmarking results show that acs outperforms other message-passing systems and provides flexible communication services for various classes of applications