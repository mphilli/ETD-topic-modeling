object-based message passing java high-performance computing message passing parallel computing we present designs for java interfaces to high performance computing softwares and research implementation issues associated with their development we investigate various issues and options for parallel programming in java--data parallelism and message passing libraries we discuss motivations for introducing hpjava an hpspmd programming model as part of the larger environment of hpjava we have designed and developed mpijava an object-oriented java interface to mpi this has been implemented by native methods wrappers around some pre-existing mpi implementation we describe the design of the mpijava api and the issues associated with its development we present and then discuss performance measurements made of communications bandwidth and latency to compare mpijava with c and fortran bindings of mpi we discuss adoption of the java object serialization model in mpijava for marshalling general communication data in mpi-like apis this approach is compared with a java transcription of the standard mpi derived datatype mechanism we evaluate overheads introduced by object serialization in mpijava then present optimized methods that reduce serialization overheads we present graphical mpijava potts model simulation and evaluate the performance of ising model simulation using metropolis and swendsen-wang cluster algorithms benchmark results are compared with native parallel and sequential codes we have publically released mpijava on a web site this includes complete source makefiles configuration scripts compiled libraries for wmpi test codes based on the ibm mpi test suite example applications javadoc documentation and installation and usage notes