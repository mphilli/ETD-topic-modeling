android security virtualization successful realization of practical computer security improvements requires an understanding and insight into the system's security architecture combined with a consideration of end-users' needs as well as the system's design tenets in the case of android a system with an open modular architecture that emphasizes usability and performance acquiring this knowledge and insight can be particularly challenging for several reasons in spite of android's open source philosophy the system is extremely large and complex documentation and reference materials are scarce and the code base is rapidly evolving with new features and fixes to make matters worse the vast majority of android devices in use do not run the open source code but rather proprietary versions that have been heavily customized by vendors for product differentiationproposing security improvements or making customizations without sufficient insight into the system typically leads to less-practical less-efficient or even vulnerable results point solutions to specific problems risk leaving other similar problems in the distributed security architecture unsolved far-reaching general-purpose approaches may further complicate an already complex system and force end-users to endure significant performance and usability degradations regardless of their specific security and privacy needs in the case of vendor customization uninformed changes can introduce access control inconsistencies and new vulnerabilities hence the lack of methodologies and resources available for gaining insight about android security is hindering the development of practical security solutions sound vendor customizations and end-user awareness of the proprietary devices they are usingaddressing this deficiency is the subject of this dissertation new approaches for analyzing evaluating and understanding android access controls are introduced and used to create an interactive database for use by security researchers as well as system designers and end-user product evaluators case studies using the new techniques are described with results uncovering problems in android's multiuser framework and vendor-customized system services finally the new insights are used to develop and implement a novel virtualization-based security architecture that protects sensitive resources while preserving android's open architecture and expected levels of performance and usability