e-mail security formal specification code generation building systems that are assured to be secure requires precise and accurate descriptions of system security properties which must then be accounted for at the implementation level it is thus essential to have both a correct system specification satisfying these properties and a valid refinement of this specification into actual working code in this thesis a software development methodology is adopted that addresses these concerns the methodology uses a combination of higher-order logic algebraic specifications and category theory to integrate formal specification and verification and code generation it supports the reuse of specification verification and implementation through composition parameterization and component-based design higher-order logic provides a means to assure the correctness of design and acts as a bridge between code generation and refinement verification algebraic specifications provide the framework for component reuse category theory furnishes the means for composing specifications and refinements as a concrete illustration of this methodology it is applied to the electronic mail system complying with internet engineering task force ietf standard privacy enhanced mail  this system's top-level security properties and protocols are first defined through higher-order logic verified to satisfy the required security properties and instantiated by adding specific data structures and operations these instantiations are then verified to be correct using higher-order logic finally the design specifications are refined to c code through stepwise refinements and compositions of these refinements