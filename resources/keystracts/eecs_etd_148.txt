io runtime irregular applications parallel processing many scientific applications are io intensive and have tremendous io requirements including checkpointing periodically writing snapshots of computations especially large number of these applications exhibits irregular access patterns where accesses to data are performed through one or more level of indirectionsa typical computation science analysis cycle for these applications involves several steps mesh generation domain decomposition simulation visualization archival of data and adjustment of parameters therefore two main focus must be considered the first one is to store data set in a canonical form so that other steps can use it easily without having to reorganize the second one is that for a restart of computation with different number of processors data set should be stored independent of number of processors that produced itin this dissertation we present the design implementation and evaluation of two parallel io runtime systems based on collective io techniques for irregular applications the design is motivated by the requirements of a large number of science and engineering applications including teraflops applications the first library has been implemented on top of parallel file systems on mpps the user application links to the library's client api that issues io requests using the io commands supported by the parallel file systems in this library we designed and implemented two kinds of collective io schemes collective io and pipelined collective io in the collective io all processors participate in the io simultaneously and in the pipelined collective io io is overlapped with communication by making processor groups as an optimization chunking and on-line compression mechanisms are included in the both collective io schemes the second library has been implemented on workstation clusters called collective io clustering this library is based on the client-io server model the io architecture of workstation clusters usually relies on a set of io servers having local disks and a set of diskless nodes by using the local file system running at each node such as unix we developed a collective io scheme that supports irregular problems in this library two io configurations are possible in the first configuration all nodes have their local disk thus the data in a client io buffer can go to its local disk removing the communication between the clients and io servers in the second configuration only subset of nodes have their disk and can serve the incoming io requests from the clients in this environment the client sends the data to the appropriate io server thus the communication latency between the client and io servers should be addressed to improve io performance to optimize the communication latency we provide a user-controllable stripe technique both the library and user applications can control this stripe unit as did on mpps this library is incorporated with compression scheme to optimize io costsin this dissertation the performance results on large-scale parallel systems including the intel paragon at caltech and ascired teraflops at sandia national labs are presented the results for the collective io clustering on ibm-sp located at argonne national labs are also presented