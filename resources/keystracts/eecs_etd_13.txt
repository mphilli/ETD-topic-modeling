redundancy timing optimization path extraction false paths circuit delay as circuits are getting denser the number of paths in a circuit is drastically increasing therefore to consider all possible paths in a circuit to perform timing analysis would be very time consuming and sometimes impossible however path extraction is a very crucial step for timing verification and timing analysis of circuits therefore having an efficient path selection algorithm leads to faster timing verification analysis and optimization tools in this dissertation a path enumeration algorithm is proposed that enumerates all the paths whose delay exceeds a given threshold in linear-time with respect to the number of paths in the circuit a parallel version of this algorithm is also proposed which can enumerate the paths of any circuit regardless of how large it is given an adequate number of machines on which the application can run on this parallel version of the algorithm is adaptive and dynamic that is it analyzes the available machines and decides how many are needed to perform the enumeration and how to distribute the load among the different machines based on their available physical memory the enumerated paths returned by both algorithms are in no particular order since sorting the paths in descending order of their delay is crucial for many timing optimization and verification algorithms it is important to sort the enumerated paths before they are sent to the user to maintain linearity of the algorithm we propose a hash-table based linear-time sorting algorithm that would sort the returned paths in descending order of their severity having enumerated the paths of a circuit we explore the different methods appearing in the literature that identify the true critical delay of a circuit finding the longest true critical delay of a given circuit is of extreme importance as it determines the frequency of the clock with which the circuit can operate however due to the existence of false paths it has been proven that the longest topological path does not always determine the true critical delay of a circuit these false paths do not contribute to the delay of the circuit since there is no input vector that can exercise them once the true critical delay has been identified and the long false paths have been removed redundancies in a circuit can be removed in any arbitrary order without penalizing the performance of the circuit in order to make the redundancy identification more efficient a new notion of acceleration and partial acceleration lines is proposed to allow the significant pruning of search space finally we propose a new redundancy removal technique whose goal is to reduce the true delay of a circuit unlike redundancy addition and removal methods this procedure is performed during the initial redundancy removal phase and uses the notion of backward redundancy prediction to perform the required analysis and removal