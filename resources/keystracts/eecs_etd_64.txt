malicious code attacks intrusion detection intrusion mitigation address space randomization waypoint operating system security loadable kernel modules the goal of the research presented in this dissertation is to prevent detect and mitigate malicious code attacks that modify the legitimate program control flow at run time this dissertation tries to answer the question what can a computer system do to counter intrusions assuming that run-time errors are unavoidable and attackers may use any available intrusion techniques or create new exploit techniquesthis dissertation presents three new system techniques to support intrusion detection and mitigation 1 an access monitoring technique for tightly-coupled binary programs 2 a context-sensitive intrusion detection technique and 3 an address space randomization technique the dissertation describes how to monitor the boundary of a module in a tightly-coupled software environment using code instrumentation and an access specification as an example the technique is applied to monitor possibly vulnerable loadable kernel modules after that the dissertation shows how a computer system supports intrusion detection with reliable program context information the technique can retrieve trustworthy program call flow proactively the dissertation also presents a new address space randomization technique that randomizes relative distance between functions dynamically and maximally this technique can best be applied to protect dedicated multi-threaded servers which demand both strong protection and high availabilitythe techniques presented in this dissertation are designed to detect and mitigate shellcode-based attacks return-into-libc attacks and any other attacks that modify the program control flow or use unauthorized data or code such attacks are often a latter stage of a buffer overflow or format string exploit the dominant exploit in the real world our techniques increase the difficulty for early-stage exploits to subvert a system