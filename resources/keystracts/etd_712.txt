distributed systems gpu java bytecode injection multithreading parallel computing spark with the surge of social media on one hand and the ease of obtaining information due to cheap sensing devices and open source apis on the other hand the amount of data that can be processed is as well vastly increasing in addition the world of computing has recently been witnessing a growing shift towards massively parallel distributed systems due to the increasing importance of transforming data into knowledge in todays data-driven world at the core of data analysis for all sorts of applications lies pattern matching therefore parallelizing pattern matching algorithms should be made efficient in order to cater to this ever-increasing abundance of data we propose a method that automatically detects a users single threaded function call to search for a pattern using javas standard regular expression library and replaces it with our own data parallel implementation using java bytecode injection our approach facilitates parallel processing on different platforms consisting of shared memory systems using multithreading and nvidia gpus and distributed systems using mpi and hadoop the major contributions of our implementation consist of reducing the execution time while at the same time being transparent to the user in addition to that and in the same spirit of facilitating high performance code parallelization we present a tool that automatically generates spark java code from minimal user-supplied inputs spark has emerged as the tool of choice for efficient big data analysis however users still have to learn the complicated spark api in order to write even a simple application our tool is easy to use interactive and offers sparks native java api performance to the best of our knowledge and until the time of this writing such a tool has not been yet implemented