android unpacking systems security software packing is a method employed by malicious applications to hide their original intent extracting the original intent of an application from its application bundle whether to perform a security analysis on it to search for security flawsor bugs or simply for educational purposes is a key requirement for the security community with the fluidity provided by the android app store coupled with a complete application-framework based environment for a malicious user to employ as an attack space it is of great importance to examine android applications and extract their intentfor basic applications simple reverse engineering tools can be used to extract a semantic view of the application very close to the original source code of the application however for applications which have been deliberately packagedpacked in such a way that their original intent cannot be extracted by simply reverse-engineering them we need a more intricate procedure to extract enough information to be able to reproduce the original intent of the application these applications are packaged such that the actual code is hiddenencrypted and only during run-time is the actual code unpacked and executedto unpack such applications we present droidunpack a tool based on dynamic program analysis which is able to extract the original intent of the application generically droidunpack is designed by exploiting some fundamental features of the android runtime which cannot be mutated by a malicious user to unpack the application we also attempts to alleviate tedious manual analysis required by a user to analyze different types of packed applications by providing a generalized tool which is able to unpack android applications regardless of the packing technique used