$TITLE:
Adaptive communication system (ACS): Design and evaluation

$DEPARTMENT:
Electrical Engineering and Computer Science

$KEYWORDS:
Adaptive communication, Message passing, Scheduling, Distributed computing

$ABSTRACT:
With recent advances in computer network technologies, we have seen a rapid development of high-performance distributed systems that utilize heterogeneous resources which are geographically dispersed across a wide-area network (e.g., grid-computing, meta-computing environments). The resources of grid-computing include a wide-range of computing systems that vary from high-performance computers (e.g., supercomputers, special-purpose parallel machines) to desktop computers/workstations and networks that are wired or wireless and that have a wide range of transmission speeds (e.g., from a few Kbps to Gbps). Grid-computing when compared to centralized computing systems offers to a network-centric application many benefits including increased performance, reliability, extensibility, cost-effectiveness, and scalability. However, network-centric applications have not fully exploited the potential of high-performance distributed systems because of excessive copying, operating system overhead, and inflexible communication systems, just to name a few. Furthermore, network-centric applications have different Quality of Service (QoS) requirements, and even one single application has multiple QoS requirements during the course of its execution. In order to support network-centric applications efficiently, message-passing tools should provide high performance and dynamic communication services to meet the requirements of a wide range of network-centric applications. We believe that these requirements cannot be efficiently achieved by using merely one approach. We need to develop adaptable and efficient message-passing tools using multithreading, middle-ware , and agent techniques.In this dissertation we have designed, developed, and evaluated the multithread, agent-based, message-passing system, Adaptive Communication System ( ACS ), for network-centric computing environments. ACS supports programmable communication, control and management services that can be optimized to meet the quality of service requirements of network-centric applications. For a given class of applications, ACS selects the appropriate multicast/broadcast algorithms using an ACS application-aware scheduling algorithm that can meet the application quality of service requirements. In addition, the implementation of an ACS resource-aware scheduling algorithm takes into consideration the types of machines and current system and network loads. The performance of ACS has been analyzed and compared with other message-passing tools such as p4, PVM, and MPI in terms of point-to-point, multicasting, and application performance. Benchmarking results show that ACS outperforms other message-passing systems and provides flexible communication services for various classes of applications.