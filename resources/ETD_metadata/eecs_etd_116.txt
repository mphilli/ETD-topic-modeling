$TITLE:
Web services based architecture in computational Web portals

$DEPARTMENT:
Electrical Engineering and Computer Science

$KEYWORDS:
Web portals, Internet, Distributed computing, WebFlow

$ABSTRACT:
Computational web portals provide user environments that simplify access and integrate various distributed computational services for scientists working on particular classes of problems. The computational web portal, Gateway, consists of a dynamically generated and browser-based user interface that adds the client applications and a distributed component-based middle tier, WebFlow. The WebFlow middle tier provides a coarse-grained approach to accessing both stand-alone and grid-enabled back end computing resources. Like most computational web portals, Gateway was originally implemented in a three-tiered structure. This has inherent limitations for building portals that can easily interoperate and share services.Specific application portals are typically built on common sets of core services, so reusability of these services is a key problem in Problem Solving Environment development. In this dissertation we address the reusability problem by presenting a comprehensive view of an interoperable portal architecture, beginning with a set of core services built using the Web services model and application metadata services that can be used to build science application front ends out of these core services, which in turn may be aggregated and managed through portlet containers. Managing multiple versions of services is an important consequence of this issue, and we close with a description of our work on negotiation for version control.These portal services may be implemented in a programming-language and platform independent way using a Web services approach. However, security in Web services for distributed computing systems is an open issue involving multiple security mechanisms and competing standards. In this dissertation we present an implementation of a flexible, message-based security system that can be bound to multiple mechanism and multiple message formats.We have developed QuakeSim portal for the earthquake science by presenting XML schemas and our design for related data services for describing faults, surface displacements, and specific simulation codes. These data services are implemented using a Web services approach and are incorporated in a portal architecture with other, general purpose services for application and file management. We then illustrate how these data models and services may be used to build distributed, interacting applications through data flow.