$TITLE:
Design and implementation of a high-performance continuous media-on-demand server

$DEPARTMENT:
Electrical Engineering and Computer Science

$KEYWORDS:
video, multimedia server

$ABSTRACT:
High performance servers and high speed networks will form the backbone of the infrastructure required for distributed multimedia information systems. A server for an interactive distributed multimedia system may require thousands of gigabytes of storage space and high I/O bandwidth. Continuous media data, such as video or audio data, typically have large file size and need deadline-driven data delivery. This dissertation presents a high-performance solution to the I/O retrieval problem in a server for a distributed multimedia system.An architectural model of a server for such a system is developed. Parallelism of data retrieval is achieved by striping the data across multiple disks. The admission control policy for accepting a new request at steady state is presented. The performance of any server ultimately depends on the data access patterns. Modifications of the basic retrieval algorithm that exploit data access patterns in order to improve system throughput are presented. The results of a detailed, component-wise instrumentation of an implementation of the server model are presented.In order to maximize system utilization, and thus minimize cost, it is essential that the load be balanced among each of the server's components viz. the disks, the interconnection network and the scheduler. We develop dynamic allocation policies for improving server capacity. These policies assign media requests to the nodes of the server so as to balance the load on the interconnection network and the scheduling nodes. Five policies for request assignment, Round Robin (RR), Minimum Link Allocation (MLA), Minimum Contention Allocation (MCA), Weighted Minimum Link Allocation (WMLA) and Weighted Minimum Contention Allocation (WMCA) are developed. We also address the issues of file replication for achieving load balancing among the disks in the storage subsystem, and the effect of varying the concurrency of data retrieval from the storage subsystem. The performance of the dynamic allocation policies on an implementation of the server model is evaluated. The experimental results demonstrate the differences in the performance of the dynamic allocation policies with respect to the important metric of server stream capacity. The WMLA and WMCA policies significantly improve the stream capacity over that due to the other policies.